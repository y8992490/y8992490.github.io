<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="posts/2.html"/>
      <url>posts/2.html</url>
      
        <content type="html"><![CDATA[<h3 id="命名风格"><a href="#命名风格" class="headerlink" title="命名风格"></a>命名风格</h3><p>学习资源来自阿里巴巴编程手册（泰山板）</p><h4 id="强制执行"><a href="#强制执行" class="headerlink" title="强制执行"></a>强制执行</h4><ol><li><p>代码中不能使用<strong>下划线美元符号开头和结束</strong></p></li><li><p><strong>所有的命名</strong>严禁使用拼音和英文混合方式，更不允许直接使用中文</p><p>尽量避免采用拼音</p></li><li><p><strong>类名</strong>强制使用UpperCamelCase风格（也就是每个单词开头大写的意思）</p><p>但是DO/BO/DTO/VO/AO/PO/UID等例外可以理解成本来就是大写的一些名称</p></li><li><p><strong>方法名、参数名、成员变量、局部变量</strong>都统一使用lowerCamelCase风格（也就是开头小写后面每个单词开头大写的意思）</p></li><li><p><strong>常量</strong>命名应全部使用大写单词之间使用<strong>下划线</strong>需要完整清楚，不用怕名字长</p></li><li><p><strong>抽象类</strong>命名使用Abstract或Base开头，<strong>异常类</strong>名使用Exception结尾，测试类命名以它要测试的类的名称开始以Tese结尾</p></li><li><p>类型与中括号紧挨相连来表示数组如在main参数中使用String args[] 来定义</p></li><li><p><strong>POJO类</strong>的任何布尔类型的变量都不要加is前缀，否侧部分框架解析会引起序列化的错误</p></li><li><p><strong>包名</strong>统一使用小写点分隔符之间仅有一个自然语句的英语第N次，包名统一使用单数形式，但类名如过有复数含义，类名可以使用复数形式。</p></li><li><p>避免在子父类的成员变量之间，或者不同代码块的局部变量之间采用完全相同的命名，使可读性降低</p></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="posts/1.html"/>
      <url>posts/1.html</url>
      
        <content type="html"><![CDATA[<p>hello world    （你好世界）</p><p>public （公共）</p><p>class  （类）</p><p>int    （整数The integer）</p><p>Scanner    （扫描仪）</p><p>void    （空白   输入型）</p><p>main    （主要的）</p><p>method    （方法）</p><p>String    （字符串）</p><p>Variable    （变量）</p><p>scope    （范围）</p><p>static    （静态）</p><p>double    （双倍）</p><p>salary    （工资）</p><p>name    （名字）</p><p>age    （年龄）</p><p>println    （打印）</p><p>null    （无效的）</p><p>Constant    （常量）final </p><p>initialize（初始化）</p><p>instanceof      （运算符）</p><p>operator    （操作符）</p><p>boolean    (布尔)</p><p>score    （成绩）</p><p>bit    （比特）</p><p>byte    （字节）</p><p>define    （宏定义）</p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="posts/0.html"/>
      <url>posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li><p>注释、标识符、关键字</p><ul><li><p>用注释给程序员自己看以便更好的明白代码的意思</p></li></ul><p>养成书写注释的习惯非常重要</p><p>java中注释有三种</p><p>单行注释、多行注释、文档注释</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Helloworld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是单行注释</span>        <span class="token comment" spellcheck="true">/*这          是          多行注释*/</span>        <span class="token comment" spellcheck="true">//文档注释</span>        <span class="token comment" spellcheck="true">/*        * 可以@一些东西        *        * */</span>    <span class="token punctuation">}</span></code></pre><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>也就是被创造的名字，文件名不能用关键字</p><p>java所有的组成部分都需要名字、类名变量名以及方法名都被称为标识符。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//这就是类名</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//这就是方法名</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Helloworld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>    </code></pre><img src="https://pic3.zhimg.com/80/v2-9a48cb1ebc97ec3081e114354629bdfe_720w.jpg" style="zoom:80%;"><ul><li><p>标识符的注意点</p><p>所有的标识符都应该以字母（A-Z或者a-z），$、下划线开始</p><p>首字符之后可以以字母（A-Z或者a-z），$、下划线任何字符组合（但是比较特殊的符号不行）</p><p><strong>不能使用关键字作为变量名或者方法名</strong></p><p><strong>标识符大小敏感</strong></p><p>合法标识符：</p><pre class=" language-java"><code class="language-java">age、$sasdf、_ds、_1_sdsa</code></pre><p>非法标识符：</p><pre class=" language-java"><code class="language-java">123abc、<span class="token operator">-</span>sads、#abc</code></pre><p>可以用中文命名但是不建议运用，也不建议用拼音</p></li></ul></li><li><p>数据类型</p><p>1.强类型语言</p><p>要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用</p><p>2.弱类型语言</p><p>要求较低没有太大的要求，但是有自己的特性</p><img src="https://pic1.zhimg.com/80/v2-3c2c511d2d8bb6897e65e2db335e7b74_720w.jpg"><h3 id="Java的数据类型分为两大类"><a href="#Java的数据类型分为两大类" class="headerlink" title="Java的数据类型分为两大类"></a>Java的数据类型分为两大类</h3><ol><li>基本类型（primitive type）</li></ol><ul><li><p>整数类型</p><ul><li>byte 一个字节范围：-128~127.</li><li>short 二个字节：-32768~32767</li><li>int    四个字节：-2147483648~2147483647</li><li>long 八个字节： -9223372036854775808~923372036854775807</li></ul></li><li><p>浮点类型</p><ul><li>float  四个字节</li><li>double 八个字节</li></ul></li><li><p>字符类型</p><p>char  两个字节</p></li><li><p>boolean（布尔）类型  占一位 只有真（true）假（false）</p><p>true</p><p>false</p><ul><li>代码（必须记住的基础知识，记住了在往下看，要复习前面的知识）</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">data</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String a<span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//八大数据类型</span>        <span class="token comment" spellcheck="true">//整数的四大类型</span>        <span class="token keyword">int</span> num1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 最常用</span>        <span class="token keyword">byte</span> num2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token keyword">short</span> num3 <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> num4 <span class="token operator">=</span> 30L；<span class="token comment" spellcheck="true">// long 一般加L后缀</span>        <span class="token comment" spellcheck="true">//小数，浮点数</span>        <span class="token keyword">float</span> num5 <span class="token operator">=</span> <span class="token number">50.1F</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//float类型需要在数字后面加后缀</span>        <span class="token keyword">double</span> num6 <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 字符</span>        <span class="token keyword">char</span> name <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//字符串，String不是关键词，类</span>        String namea <span class="token operator">=</span> <span class="token string">"某某"</span>        <span class="token comment" spellcheck="true">//布尔值（boolean）</span>        <span class="token keyword">boolean</span> falg1 <span class="token operator">=</span> <span class="token boolean">true</span>；        <span class="token keyword">boolean</span> flag2 <span class="token operator">=</span> <span class="token boolean">false</span>；</code></pre></li></ul><ol start="2"><li><p>引用类型（reference type）</p><p>String</p></li></ol></li><li><p>变量，常量</p><ul><li><p>变量是什么：就是可以变化的量。</p></li><li><p>Java是一种强类型语言，每个变量都必须什声明其类型</p></li><li><p>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和作用域。</p><pre class=" language-java"><code class="language-java">tvne varName <span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">,</span>varName<span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数据类型 变量名 = 值；可以使用逗号隔开来声明多个同类型变量。</span></code></pre></li><li><p>注意事项：</p><ul><li>每个变量都有类型，类型可以是最基本类型，也可以是引用类型</li><li>变量名必须是合法的标识符</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</li></ul></li></ul></li></ol><h3 id="数据类型扩展及面试题讲解"><a href="#数据类型扩展及面试题讲解" class="headerlink" title="数据类型扩展及面试题讲解"></a>数据类型扩展及面试题讲解</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">data_DOME02</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//数据扩展：进制 二进制 十进制 八进制 十六进制</span>        <span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">010</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//八进制0</span>        <span class="token keyword">int</span> i3 <span class="token operator">=</span><span class="token number">0x10</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//十六进制0x  0-9  A-F</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//浮点数</span>        <span class="token comment" spellcheck="true">//float 表示有限的位数 离散 舍入误差 大约 接近但是不等于</span>        <span class="token comment" spellcheck="true">//不要完全使用浮点数进行比较</span>        <span class="token comment" spellcheck="true">//银行业务怎么去表示用 “BigDecimal” 数学工具类</span>        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">0.1f</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 0.1</span>        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 0.1</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token operator">==</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//false</span>        <span class="token keyword">float</span> d1 <span class="token operator">=</span> <span class="token number">11111111111111111111f</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> d2 <span class="token operator">=</span> d1 <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token operator">==</span>d2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//true</span>        <span class="token comment" spellcheck="true">// 字符的拓展</span>        <span class="token keyword">char</span> c1 <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c2 <span class="token operator">=</span> <span class="token string">'中'</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强制转换</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强制转换</span>        <span class="token comment" spellcheck="true">// 输出的结果 强制转换后的编程了表单里的数字</span>        <span class="token comment" spellcheck="true">/*所有的字符本质上还是数字        编码 Unicode表 有2个字节的位置0 - 65535 之间*/</span>       <span class="token comment" spellcheck="true">// Unicode 表的表示</span>       <span class="token keyword">char</span> c3 <span class="token operator">=</span> <span class="token string">'\u0061'</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//结果 “a”</span>        <span class="token comment" spellcheck="true">//  转译字符如 /t 字符表 \n 换行  等等</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello\nWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//思考题</span>        String sa <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"Hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"Hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sa<span class="token operator">==</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false</span>        String sc <span class="token operator">=</span> <span class="token string">"Hello world"</span><span class="token punctuation">;</span>        String sd <span class="token operator">=</span> <span class="token string">"Hello world"</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sc<span class="token operator">==</span>sd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span>        <span class="token comment" spellcheck="true">//为什么两个输出结果不一样 应从内存分析</span>        <span class="token comment" spellcheck="true">//布尔值扩展 两种方式都可以</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>falg<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//Less is More 代码需要精简易读</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li><p>由于java是强类型语言，所以要进行有些运算的时候，需要用到类型转换</p><p>低—————————————————————————————————高</p><p>(byte，short，char)–&gt; int–&gt; long–&gt;float( 小数的优先级大于整数)–double</p></li><li><p>运算中，不同类型的数据先转化为同一类型，然后进行运算</p></li><li><p>强制类型转换</p><p>（类型）变量名  高—-低</p></li><li><p>自动类型转换</p><p>低—-高</p></li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Type_conversion</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>i<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强制转换</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//结果i=128,b=-128, 因为byte就只有1个字节的范围也就是-128-~127</span>        <span class="token comment" spellcheck="true">//内存溢出就会出错</span>        <span class="token comment" spellcheck="true">//自动转换  低----高</span>        <span class="token keyword">byte</span> c <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token keyword">double</span> d <span class="token operator">=</span> c<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//因为double位数是最大了(浮点类型里) 所以由低到高的转换不需要强制</span>        <span class="token comment" spellcheck="true">//注意点：</span>        <span class="token comment" spellcheck="true">/*        1.不能对布尔值进行转换        2.不能把对象类型转换为不相干的类型        3.在把高容量转换到低容量的时候，需要强制转换        4.转换的时候可能存在内容溢出，或者精度问题。        */</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=============分割线==============="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">23.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//23</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">45.98f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//-45  这两个就是会出现上述的精度问题</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==============分割线=============="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> d <span class="token operator">=</span> c<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//98</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//b</span>        <span class="token comment" spellcheck="true">//因为char是字符类型强制转换为int以后就成了编码里的数字，在将得到的</span>        <span class="token comment" spellcheck="true">//数转换为char类型就变成了b</span>        <span class="token comment" spellcheck="true">//操作比较大的数，注意溢出问题</span>        <span class="token comment" spellcheck="true">//JDK7新特性，数字之间可以用下划线分割</span>        <span class="token keyword">int</span> money <span class="token operator">=</span> 10_0000_0000<span class="token punctuation">;</span>        <span class="token keyword">int</span> years <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> total <span class="token operator">=</span> money<span class="token operator">*</span>years<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//-1474836480,计算时出现了溢出问题</span>        <span class="token comment" spellcheck="true">//那可以用long类型转换过来吗？</span>        <span class="token keyword">long</span> total2 <span class="token operator">=</span> money<span class="token operator">*</span>years<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//还是存在溢出，因为默认是int，转换前就存在问题。</span>        <span class="token comment" spellcheck="true">//那需要怎么才能解决问题呢？</span>        <span class="token keyword">long</span> total3 <span class="token operator">=</span> money<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>years<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//先把一个数转换成long</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>total3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这样就可以正确输出了</span>        <span class="token comment" spellcheck="true">//总结就是，不是只转换结果就行，需要把中间的变量也转换成需要的类型</span>     <span class="token comment" spellcheck="true">//在书写1000000L时用大写的L这是书写规范</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>变量是什么：就是可以变化的量</li><li>Java是一种强类型语言，每个变量都必须声明其类型。</li><li>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和<strong>作用域</strong>、</li></ul><pre class=" language-java"><code class="language-java">tvne varName <span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">,</span>varName<span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数据类型 变量名 = 值；可以使用逗号隔开来声明多个同类型变量。</span><span class="token comment" spellcheck="true">//如我们可以通过变量去操控内存中的数据</span><span class="token comment" spellcheck="true">/*现在我们需要指定一个箱子去放东西（数据类型），然后箱子里放入东西那放进去的东西得有名字（变量名），放进去的东西就不一定了我们喜欢放什么就放什么（值）这个值就是储存在内存里的东西我们现在只是在程序里调用它。*/</span></code></pre><p>注意事项：</p><ul><li><p>每个变量都有类型，类型可以是最基本类型，也可以是引用类型</p></li><li><p>变量名必须是合法的标识符</p></li><li><p>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">variable</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//变量</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//可以在一行定义多个变量但是不建议这样做，可读性较差</span>        String name <span class="token operator">=</span> <span class="token string">"eag"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引用行</span>        <span class="token keyword">char</span> x <span class="token operator">=</span> <span class="token string">'X'</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//一定要保证程序的可读性</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ul><h4 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h4><ul><li><p>类变量</p></li><li><p>实例变量</p></li><li><p>局部变量</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> allclicks<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//类变量 （statin静态的）</span>    String str<span class="token operator">=</span><span class="token string">"hello world"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//实例变量 </span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//局部变量</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable_scope</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//类里面</span>    <span class="token comment" spellcheck="true">//属性：</span>    <span class="token comment" spellcheck="true">//类变量 static 从属于类</span>    <span class="token keyword">static</span> <span class="token keyword">double</span> salary <span class="token operator">=</span><span class="token number">2500</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 实例变量；从属于对象（对象也在类里面），可以在方法外</span>    String name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//main方法这些都是写在类里面的</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//局部变量是写在方法里面的 它的生命周期就在这里面比如定义的变量就只能在这个方法里使用</span>        <span class="token comment" spellcheck="true">//必须声明初始化值</span>        <span class="token comment" spellcheck="true">//什么是对象可以理解为写的一个类这个类里面有写好的方法</span>        Variable_scope variable_scope <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Variable_scope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variable_scope<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//10 0  如果有定义的值的话就会输出其值，没有赋值的就输出默认值</span>        <span class="token comment" spellcheck="true">//这个类型的默认值0或者0.0</span>        <span class="token comment" spellcheck="true">//布尔值的默认值为false</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variable_scope<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//null 除了基本类型，其余的默认都是null</span>        <span class="token comment" spellcheck="true">//输出类变量</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//其他方法一个类里面可以写多个方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ul><li><p>常量（Constant）：初始化（initialize）后不能再改变值！不会变动的值。</p></li><li><p>所谓常量可以理解成一种特殊的变量，它的值设定后，在程序运行中不允许被改变。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> 常量名 <span class="token operator">=</span> 值<span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token keyword">double</span> PI <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span></code></pre></li><li><p>常量名一般使用大写字符</p></li></ul><h4 id="变量的命名规范（重要这是书写规范）"><a href="#变量的命名规范（重要这是书写规范）" class="headerlink" title="变量的命名规范（重要这是书写规范）"></a>变量的命名规范（重要这是书写规范）</h4><ul><li><p>所有变量、方法、类名：<strong>见名知意</strong></p></li><li><p>类成员变量：首字母小写和驼峰原则：monthSalary，（除开第一个单词外后</p><p>面出现的单子首字母大写）</p></li><li><p>局部变量：首字母小写和驼峰原则</p></li><li><p>常量：大写字母和下划线：MAX_VALUE</p></li><li><p>类名：首字母大写和驼峰原则：Man，GoodMan</p></li><li><p>方法名：首字母小写和驼峰原则：run(),runRun()</p></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><p>Java语言支持如下运算符</p><ol><li><p>算数运算符：+、-、*、/、%（取余模运算）、++、–</p><pre class=" language-java"><code class="language-java">多个类型中如果有<span class="token keyword">long</span>或者<span class="token keyword">double</span>其中一个类型结果就为<span class="token keyword">long</span>或者<span class="token keyword">double</span>类型，如果没有就全部为<span class="token keyword">int</span>类型    <span class="token operator">%</span>取余运算如：<span class="token number">21</span><span class="token operator">%</span><span class="token number">10</span>会得到<span class="token number">1</span>因为他们相除余数为<span class="token number">1</span></code></pre></li><li><p>赋值运算符：=</p></li><li><p>关系运算符：&gt;、&lt;、&gt;=、&lt;=、==、!=instanceof      </p><p>//关系运算符结果只有两个 正确（true）、错误（false）</p></li><li><p>逻辑运算符: &amp;&amp;、||、!      与或非 我与你，我或你，非你及我</p></li><li><p>位运算符:&amp;、|、^、~、&gt;&gt;、&lt;&lt;、&gt;&gt;&gt;(了解!!!)</p></li><li><p>条件运算符：? 、：</p></li><li><p>扩展赋值运算符：+=、-=、*=、/=</p></li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> operator<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dome_Operator02</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ++ -- 自增 自减 一元运算符</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//a++ = 先运算a赋值得b然后在算a+1</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">++</span>a<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//++a 先运算a+1</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 幂运算  2^3   2*2*2  Java里没有这样的运算</span>        <span class="token comment" spellcheck="true">//但是Java里有这样的数学运算工具类</span>        <span class="token keyword">double</span> pow <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pow<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> operator<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">operator03</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//逻辑运算符  与 或 非</span>        <span class="token keyword">boolean</span> a <span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> b <span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a &amp;&amp; b;"</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token operator">&amp;&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//两个变量都为真结果才为真</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a || b;"</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token operator">||</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//任何一个变量为真结果则为真 必须两个都为假结果才为假</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"! (a &amp;&amp; b);"</span><span class="token operator">+</span><span class="token operator">!</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//两个变量如果是真则为假，如果是假则为真</span>        <span class="token comment" spellcheck="true">//非运算和于运算 区别在与运算如果运算第一个变量为假时，就不会再向下运算了</span>        <span class="token comment" spellcheck="true">//但是非运算就需要两个变量都去运算和或也一样</span>        <span class="token comment" spellcheck="true">//短路运算就是与这样的，只要开始运算第一个变量为假那结果就为假了后面就不用运算了</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> d <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>c<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//结果为5充分说明（c++&lt;4）没有运算</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><pre><code>/*位运算符        A = 0011 1100        B = 0000 1101--------------------------------------------------------------------------------      与  A&amp;B  0000 1100  如果两个都为1则为1否则都为0  也是就说对应各位两个都是1才能是1 不然就是0      或  A|B  0011 1101  如果有1则为1    也就是说任意一个位只要出现1那就得1     异或  A^B 0011 0001  如果相同则为0，不同则为1   也就是说不管各位上是0还是1只要两个相同就是0不然就是1     去反   ~B 1111 0010  如果是0则为1，是1则为0   也就是说各位两个相比是0的就是1是1的就是0     （这里别看错是对B去反不是AB比较）     0 1也就是开或关  真或假         */        //面试题 2*8 如何运算最快   &lt;&lt;左移1位相当于*2   &gt;&gt;右移1位相当于/2        //8&lt;&lt;1或者2&lt;&lt;3位</code></pre></li></ul><h4 id="扩展的运算符"><a href="#扩展的运算符" class="headerlink" title="扩展的运算符"></a>扩展的运算符</h4><pre><code>int a = 10;int b = 20;a+=b; //a = a+ba-=b;// a = a-bSystem.out.println(a);//字符串连接符 + ，String   这个是面试题System.out.println(""+a+b);//1020  字符串在前面就按序列走System.out.println(a+b+"");//30 运算在前面就先运算</code></pre><p>####三元运算符</p><pre><code>//三元运算符 X ? y : z//如果x==true，则结果为y，否则结果为zint score = 80;String typa = score &gt;=80 ?"优秀":"优秀";String type = score &lt;60 ?"不及格":"及格";//必须掌握//if以后要学System.out.println(type+typa);</code></pre><h4 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h4><p>（）</p><h4 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h4><p>包的本质如同文件夹</p><p>规范一般用公司名倒置为包名</p><p>package 包语句的语法格式 系统自动写的</p><p>import 导入包 需要调用包时就用这个命令</p><p>一个包里面有多个类 import 包名.* 就是通配符 把所有类都通用。</p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吉他自学笔记</title>
      <link href="posts/d220.html"/>
      <url>posts/d220.html</url>
      
        <content type="html"><![CDATA[<h1 id="自学吉他的一点体会"><a href="#自学吉他的一点体会" class="headerlink" title="自学吉他的一点体会"></a>自学吉他的一点体会</h1><h3 id="所有的坚持都是因为热爱"><a href="#所有的坚持都是因为热爱" class="headerlink" title="所有的坚持都是因为热爱"></a>所有的坚持都是因为热爱</h3><h3 id="从哪里开始学习的吉他"><a href="#从哪里开始学习的吉他" class="headerlink" title="从哪里开始学习的吉他"></a>从哪里开始学习的吉他</h3><p>我记得当时在部队，娱乐室里有一把破破烂烂生锈的吉他，因为那个时候在部队休息时间没有手机可以玩，</p><p>所以鬼使神差的我去拿起了那把吉他，琴弦这些都是生锈的，而且也没有书籍可以学习一个人在哪里乱弹了几下</p><p>也就走了，来在军网上偶然间看到一个吉他的学习教程，就初步了解了吉他。再后来我买了我的第一本书和琴</p><p>“吉他三月通”和一把“拉维斯的入门级的琴”看到这里千万不要着急就去买琴买书，先看下去。</p><ul><li><p>有必要买书吗？买什么书呢？</p><p>说实话如多只想自己娱乐，或者一些普通的玩一下，我觉得没必要去买太多书，</p><p>有一本指导性的就行“民谣吉他考级标准教程（王鹰和马鸿老师的版本）”，当然如果你想走职业乐手</p><p>还是好好读书自己去考考音乐学院吧，如果你想自己以后组乐队玩感觉好像没有太大必要（当然以后学习乐理是很重要的先入门在考虑其它的吧），其它的网上找找教学视频吧“找成体系的教程”个人推荐课一看看“N7、果木浪子、或者吉他自学三月通的教学视频”</p></li><li><p>买什么吉他？预算多少？</p><p>首先你的明白你喜欢的是什么吉他，到底是不是吉他“木吉他、电吉他、尤克里里、贝斯”这些东西你的先弄明白，吉他每个部位叫什么名字得清楚，我自己学的是木吉他（民谣吉他）。</p><p>木吉他有全单和面单的合板的带电箱的不带电箱的，</p><p>全单面单合板：简单理解也就是一颗书砍了以后整块的切下来的木料组合的琴叫全单的。</p><p>​                            面单的就是吉他只有一个面（有可能是前面的班板，也有可能是背侧板）是一整块木料的</p><p>​                            合板就是整把吉他全是合板组成的（合板也就是碎的木料打成了木浆，然后经过一些工业工序最后压成的一块木板）</p><ul><li><p>好现在大致什么是全单面单合板，最好的吉他就是全单的吉他，其次面单，最差合板，——当然还有一种</p><p>叫“烧火棍”大家还是去找个视频看一看了解一下这些东西最好。</p><ul><li><p>那预算多少，买什么牌子呢？（木吉他）</p><p>请问你的手机多少钱，我推荐如果你真的想学“直接买一个贵的”，当然大多数人</p><p>可能都是想先买一个入门级的先学看看，这个看你自己考虑</p><p>不用担心被坑淘宝上因为一个竞争关系的原因，只要不是上5000以上的感觉好像都没必要太注意的去挑选吧，当然你自己还是要货比三家呀！！！</p><p>买贵的买便宜的记住一点&gt;认准大品牌</p><p>大品牌坑少一点，大品牌有“芬达、Gibson、Lbanez、（前三个电吉他造诣较高），雅马哈、卡马、拿火”当然还有很多大品牌我用过的大概就这些，我买的第一把琴是“拉维斯“不过那个时候不是很懂，当然琴也不差</p></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 吉他学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA入门环境搭建</title>
      <link href="posts/5d95.html"/>
      <url>posts/5d95.html</url>
      
        <content type="html"><![CDATA[<p>###初识JAVA</p><p>1972年C诞生</p><p>1982年C++诞生</p><p>1995年（Applet）</p><p><del>J2SE桌面</del></p><p><del>J2ME手机</del></p><p>J2EE服务器</p><p>高可用、高性能、高并发</p><p>构建工具 Maven</p><p>应用服务器 Tomcat</p><p>Web开发 Spring</p><p>开发工具 Eclipse、Netbean</p><p>2006 Hadoop（大数据）</p><p>2008 Android （手机端）</p><h3 id="语言的三大结构"><a href="#语言的三大结构" class="headerlink" title="语言的三大结构"></a>语言的三大结构</h3><ol><li><p>顺序结构</p></li><li><p>选择结构</p><p>if   else</p><p>switch   case</p></li><li><p>循环结构</p><p>while  for  do  while  goto</p></li></ol><h3 id="JAVA特性和优势"><a href="#JAVA特性和优势" class="headerlink" title="JAVA特性和优势"></a>JAVA特性和优势</h3><p>（待理解）</p><ul><li>简单性</li><li>面向对象</li><li>可移植性（跨平台性，一次编译到处运行）</li><li>高性能</li><li>分布式</li><li>动态性（反射机制）</li><li>多线程</li><li>安全性（异常机制）</li><li>健壮性（使用的人多）</li><li>思考：为什么JAVA能够成功</li></ul><h3 id="JAVA的三大版本"><a href="#JAVA的三大版本" class="headerlink" title="JAVA的三大版本"></a>JAVA的三大版本</h3><ul><li><p>JAVASE标准版</p><p>桌面程序，控制台</p></li><li><p>JAVAME嵌入式开发（基本已经落后）</p><p>手机，小家电</p></li><li><p>JAVAEE企业级开发</p><p>Web前端，服务器开发</p></li><li><p>JDK（开发者工具）</p></li><li><p>JRE（运行时环境）</p></li><li><p>JVM（编译型，解释型）</p></li></ul><h3 id="JAVA开发环境的搭建"><a href="#JAVA开发环境的搭建" class="headerlink" title="JAVA开发环境的搭建"></a>JAVA开发环境的搭建</h3><ol><li><p>JDK下载与安装卸载</p><p>卸载JDK删除目录文件</p><p>删除环境变量JAVA——HOME</p><p>删除path下JAVA目录</p><p>打开CMD运行JAVA -version</p></li><li><p>下载对应的JDK版本（安装）</p><p>安装</p><p>配置环境环境变量在系统变量里新建变量</p><p>JAVA_HOME</p><p>路径</p><p>配置path变量找到path变量打开新建%JAVA_HOME%\bin</p><p>新建%JAVA_HOME%\jre\bin</p></li><li><p>打开CMD输入 JAVA -version</p></li></ol><h3 id="第一个程序Hello-wored"><a href="#第一个程序Hello-wored" class="headerlink" title="第一个程序Hello wored"></a>第一个程序Hello wored</h3><ul><li><p>Helloworld 简单的语法规则</p><p>新建.java文件</p></li><li><p>编写第一个程序</p></li></ul><pre><code>//公开的类  hello为类名public class hello{    public static void main(String[] args)  //公开的方法    {        System.out.println("Hello,world");  //输出语句    }}</code></pre><p> 然后进行编译找到目录打开CMD 运用javac 文件名.java进行编译，然后会看到文件里多了一个class文件再用CMD运行命令java 文件名  即可运行代码。</p><p>![运行结果](D:\Study DOME\JAVA notes\code\javadome\Hellowold.png)</p><p>注意：java 对大小写敏感</p><p>​            输出语句为中文有可能出现BUG（尽量使用英文编辑）</p><p>​            文件名一定与类名要保证一至</p><p>​            符号要运用英文符号</p><h3 id="JAVA程序的运行机制"><a href="#JAVA程序的运行机制" class="headerlink" title="JAVA程序的运行机制"></a>JAVA程序的运行机制</h3><ul><li><p>编译型（complie）</p><p>（好比你需要了解一件国外的书，可以通过翻译好的中文版进行了解，可以有回路可以回过去在看一次，但是一旦内容有更新就需要重新编译）</p><p>C  C++多用</p></li><li><p>解释型（interpreted）</p><p>（好比想了解一本外文书，但是请了一位翻译说给你听，比较快捷但是没有回路想要在一次了解就需要重复翻译好处就是一旦有改动就可以实时翻译，也就是我想知道什么就翻译什么）</p><p>网页  JAVA</p></li><li><p>程序的运行机制</p><p>源文件&gt;编译成class文件&gt;解释器&gt;操作平台</p></li></ul><h3 id="IDEA的安装"><a href="#IDEA的安装" class="headerlink" title="IDEA的安装"></a>IDEA的安装</h3><ol><li><p>什么是IDE（集成开发环境）</p><p>用于提供程序开发环境的运用程序</p></li><li><p>IDEA介绍</p><p>jetbrains公司</p></li><li><p>下载后傻瓜式安装（学生可以下载公共版的）</p><p>设置里可以设置字体</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA预科阶段二</title>
      <link href="posts/2a8c.html"/>
      <url>posts/2a8c.html</url>
      
        <content type="html"><![CDATA[<h1 id="Computer-电子计算机"><a href="#Computer-电子计算机" class="headerlink" title="Computer 电子计算机"></a>Computer 电子计算机</h1><h3 id="电脑的组成由："><a href="#电脑的组成由：" class="headerlink" title="电脑的组成由："></a>电脑的组成由：</h3><p>Io设备（输入输出设备）</p><p>应用软件、办公软件</p><p>开发、软件开发</p><p>人机交互（图形化界面、命令行DOS）</p><p>电脑运行的体系：</p><ul><li>冯洛伊曼体系结构（待补充）</li></ul><p><img src="https://pic1.zhimg.com/80/v2-6a4c23a9769a0498fe07f164d5f1a7c8_720w.jpg" alt="冯洛伊曼体系结构"></p><h4 id="电脑常用的快捷键："><a href="#电脑常用的快捷键：" class="headerlink" title="电脑常用的快捷键："></a>电脑常用的快捷键：</h4><p>Tab、Shift、Ctrl、Alt、空格、Enter、Window、</p><p>任务管理器：Ctrl+Shift+Esc</p><p>运行：Ctrl+Window+R</p><h3 id="DOS命令："><a href="#DOS命令：" class="headerlink" title="DOS命令："></a>DOS命令：</h3><ol><li>打开CMD的方式直接在开始菜单里点</li><li>运行CMD打开</li><li>在任意文件夹下按住Shift+右键点击，打开命令行窗口（可以直接进入到文件路径）</li><li>在资源管理器的地址栏前面加上CMD的路径（可以直接进入到文件路径）</li></ol><p>管理员方式运行，在菜单里右键选择管理员运行。</p><ul><li><p>盘符切换目录 D:</p></li><li><p>查看当前目录下所有文件 dir</p></li><li><p>切换目录 cd （change  directory）“cd  /d  E:” (即可进入需要的路径)  “cd..”  返回上一级</p></li><li><p>清理当前窗口 cls （clear screen）</p></li><li><p>退出终端 exit</p></li><li><p>查看电脑ip  ipconfig</p></li><li><p>打开应用如： calc（计算机）mspaint（画图）notepad（记事本）直接输出英文名称即可打开</p><p>或者在目录下直接输入要打开的文件名称打开</p></li><li><p>ping 命令  ping <a href="http://www.baidu.com/">www.baidu.com</a></p></li><li><p>创建目录文件 md 名称 再创建的文件里建立文件cd&gt;名称</p></li><li><p>删除文件del 文件.名称</p></li><li><p>删除目录 rd 名称</p></li></ul><h3 id="计算机语言的发展史"><a href="#计算机语言的发展史" class="headerlink" title="计算机语言的发展史"></a>计算机语言的发展史</h3><p>（待补充）</p><ol><li><p>第一代语言“机器语言”</p><p>二进制码</p></li><li><p>汇编语言</p><p>解决人类不能读懂计算机语言的问题 </p></li><li><p>高级语言（第三代语言）</p><p>面向对象和面向过程两大类</p></li></ol><p>）</p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA预科阶段一</title>
      <link href="posts/ea1f.html"/>
      <url>posts/ea1f.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的第一篇文章"><a href="#我的第一篇文章" class="headerlink" title="我的第一篇文章"></a>我的第一篇文章</h1><p>markDown语法的使用</p><h2 id="标题的使用"><a href="#标题的使用" class="headerlink" title="标题的使用"></a>标题的使用</h2><p>运用“#”增加一个“#”标题级别增加一级</p><p>如“#标题”为一级标题依次类推</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>运用“星号”，如“星号星号Hello，World星号星号“是加粗<br>“星号Hello，world星号”是斜体<br>“星号星号星号Hello，world星号星号星号”是斜体加粗<br>删除线用“波浪线~”来表示<br>如“波浪线波浪线删除线波浪线波浪线”，“<del>删除线</del>”</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>运用“&gt;”来表示<br>如“&gt; 选择某某某某”</p><blockquote><p>选择某某某某</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>可以运用“—”或者“***”，表示</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>可以引用本地图片和网络图片<br>运用“！【名字】（地址）”来表示</p><img src="D:\用于存放博客用到的主题\tupian\微信图片_20210206150910.jpg" alt="tupian" style="zoom:25%;"><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>运用【名字】（链接）来表示<br>如<a href="https://xinqindexuexi.gitee.io/">我的博客</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>运用“1.空格”或者“-空格”都可以表示</p><ol><li></li><li></li><li></li></ol><ul><li></li><li></li><li><p>如上</p></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>可以用右键直接插入</p><p>也可以“|某某|某某|某某|”</p><p>分割线|XX|XX|某XX|</p><p>内容|某某|某某|某某|</p><p>如</p><table><thead><tr><th>某某</th><th>某某</th><th>某某</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td>XX</td><td>XX</td><td>XX</td></tr><tr><td>—-</td><td>—-</td><td>—-</td></tr><tr><td></td><td></td><td></td></tr><tr><td>某某</td><td>某某</td><td>某某</td></tr><tr><td>—-</td><td>—-</td><td>—-</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p> 但是一般运用插入</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>通过“···”来表示</p><p>如</p><pre><code>public static void main(String[] args){}</code></pre><p>还未完善还有很多可以运用插入。</p>]]></content>
      
      
      <categories>
          
          <category> Java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
